---
import { Image, inferRemoteSize } from "astro:assets";
import { toArtUrl } from "../data/url.ts";

export interface ImageProps {
  /**
   * URL relative to https://static.wolfgirl.dev/art/
   */
  src: string;
  /**
   * Optional dimenson override (defaults to max 256/256 in both directions)
   */
  dims?: {
    width: number;
    height: number;
  };
  alt: string;
  title?: string;
  desc: string;
}

type Props = ImageProps;

const { src, dims, alt, title, desc } = Astro.props;
const url = toArtUrl(src).toString();
const { width: remoteWidth, height: remoteHeight } = await inferRemoteSize(url);
let width = 256;
let height = 256;
if (dims) {
  ({ width: width, height: height } = dims);
}
// Need to have custom way of shrinking image to fit inside both of these bounds, while preserving aspect ratio
width = Math.min(width, (remoteWidth * height) / remoteHeight);
height = Math.min(height, (remoteHeight * width) / remoteWidth);
---

<style>
  figure {
    width: 100%;
    margin: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  figure div {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-evenly;
    flex-wrap: wrap;
    gap: 1em;
    margin: 1em 0;
  }
</style>

<figure>
  <div>
    <a href={url}>
      <Image
        src={url}
        layout={"fixed"}
        width={width}
        height={height}
        alt={alt}
        title={title}
        loading={"eager"}
      />
    </a>
  </div>
  <figcaption>
    <Fragment set:html={desc} />
  </figcaption>
</figure>
