---
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Page from "../../templates/Default.astro";
import { type BlogData, toBlogData } from "../../data/blog";
import TagLink from "../../components/blog/TagLink.astro";

interface Props {
  post: Pick<CollectionEntry<"blog">, "render">;
  data: BlogData;
}

export const getStaticPaths = (async () => {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: {
      slug: post.slug,
    },
    props: { post, data: toBlogData(post) },
  }));
}) satisfies GetStaticPaths;

const { post, data } = Astro.props;
const { Content } = await post.render();
---

<Page title={data.title} description={data.description}>
  <h1 slot="header"><a href="/blog/">{data.title}</a></h1>
  <ul class="info">
    <li>Published: {data.published.toLocaleString("en-US")}</li>
    {
      data.tags.length > 0 && (
        <li>
          Tags:{" "}
          {data.tags.flatMap((tag) => [", ", <TagLink tag={tag} />]).slice(1)}
        </li>
      )
    }
  </ul>
  <Content />
</Page>
