---
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection, render } from "astro:content";
import Post from "../../templates/Post.astro";
import { type BlogData, toBlogData } from "../../data/blog";
import TagLink from "../../components/blog/TagLink.astro";

interface Props {
  post: CollectionEntry<"blog">;
  data: BlogData;
}

export const getStaticPaths = (async () => {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: {
      slug: post.id,
    },
    props: { post, data: toBlogData(post) },
  }));
}) satisfies GetStaticPaths;

const { post, data } = Astro.props;
const { Content } = await render(post);
---

<Post
  section_title="PolyWolf's Blog"
  home_link="/blog/"
  title={data.title}
  description={data.description}
>
  <div class="info">
    <h1>{data.title}</h1>
    <span
      >Published: {
        data.published.toLocaleString("en-US", { timeZone: "America/New_York" })
      }</span
    >
  </div>
  <div class="post">
    <Content />
  </div>
  <div class="tags">
    {data.tags.map((tag) => <TagLink tag={tag} />)}
  </div>
</Post>

<style is:global>
  main {
    padding: 0 !important;
  }
</style>

<style lang="scss">
  @use "../../scss/dims";
  @use "../../scss/breakpoints";

  .info,
  .tags {
    background-color: var(--color-background-secondary);
    color: var(--color-text-secondary);

    padding: 16px;

    border-top: solid var(--dim-border) var(--color-border-primary);
    border-bottom: solid var(--dim-border) var(--color-border-primary);
  }

  .info h1 {
    margin: 0 0 8px;
  }

  .post {
    padding: 0 16px;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  @media (min-width: breakpoints.$breakpoint-ipad) {
    .info {
      border-top: none;
    }
    .tags {
      border-bottom: none;
    }
  }
</style>
